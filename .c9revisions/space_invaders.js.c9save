{"ts":1352217709407,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var DEBUG = false;\n\n//setup class inheritance\nFunction.prototype.inheritsFrom = function( superClass ){\n\tthis.prototype = new superClass;\n\tthis.prototype.constructor = this;\n\tthis.prototype.parent = superClass.prototype; // use this.parent.methodName.call(this[, arg]*) to call a method from the superclass\n}\n\n//x-browser event helper\nfunction addEvent(node, name, func, supressDefault) {\n\tif(node.addEventListener){\n\t\tnode.addEventListener(name, func, supressDefault);\n\t}else if(node.attachEvent) {\n\t\tnode.attachEvent(name, func);\n\t}\n}\n\n//defines a physical entity\nfunction PhysicalEntity(){\n\t//entity's mass center coordinates\n\tthis.x = 0;\n\tthis.y = 0;\n\t//entity dimensions\n\tthis.width = 0;\n\tthis.height = 0;\n}\n//update entity status\nPhysicalEntity.prototype.update = function(){\n\tif(DEBUG) console.log('updating: ' + this.constructor.name + '[width:' + this.width + ' height:' + this.height + '] at <' + this.x + ',' + this.y + '>');\n};\n//translates drawing context so that the space-box alloted for the entity's dimensions is centered on the entity's center of mass\nPhysicalEntity.prototype.paint = function(context){\n\tcontext.save();\n\tcontext.translate( this.x - Math.floor(this.width/2), this.y - Math.floor(this.height/2) );\n\tthis.draw(context);\n\tcontext.restore();\n};\n//draws the entity on screen\nPhysicalEntity.prototype.draw = function(context){\n\tif(DEBUG) console.log('drawing: ' + this.constructor.name + '[width:' + this.width + ' height:' + this.height + '] at <' + this.x + ',' + this.y + '>');\n}\n//returns true if the other entity collides with this one\nPhysicalEntity.prototype.hits = function( anotherPhysicalEntity ){\n\tvar distance = Math.sqrt( Math.pow(this.x - anotherPhysicalEntity.x, 2) + Math.pow(this.y - anotherPhysicalEntity.y, 2) );\n\treturn (distance <= this.width/2 && distance <= this.height/2) \n\t\t\t|| (distance <= anotherPhysicalEntity.width/2 && distance <= anotherPhysicalEntity.height/2);\n}\n\n//defines a spaceship\nfunction Spaceship(){\n\tthis.x = 100;\n\tthis.y = 300;\n\tthis.width = 50;\n\tthis.height = 50;\n\tthis.counter = 0;\n}\nSpaceship.inheritsFrom(PhysicalEntity);\n//draw the Spaceship\nSpaceship.prototype.draw = function(context){\n\tcontext.fillStyle = '#FFFFFF';\n\tcontext.beginPath();\n\tcontext.moveTo( Math.floor(this.width)/2, 0);\n\tcontext.lineTo(this.width, this.height);\n\tcontext.lineTo(0, this.height);\n\tcontext.closePath();\n\tcontext.fill();\n\tif(DEBUG) this.parent.draw.call(this, context);\n}\n//updates Spaceship\nSpaceship.prototype.update = function() {\n\t//move left\n\tif(game.keyboard[37]){\n\t\tthis.x -= 10;\n\t\tif(this.x - Math.floor(this.width/2) < 0){\n\t\t\tthis.x = Math.floor(this.width/2);\n\t\t}\n\t}\n\t//move right\n\tif(game.keyboard[39]){\n\t\tthis.x += 10;\n\t\tif(this.x + Math.floor(this.width/2) > game.canvas.width){\n\t\t\tthis.x = game.canvas.width - Math.floor(this.width/2);\n\t\t}\n\t}\n\t//fire a laser\n\tif(game.keyboard[32]){\n\t\tif(! game.keyboard.fired){\n\t\t\tthis.fireLaser();\n\t\t\tgame.keyboard.fired = true;\n\t\t}else{\n\t\t\tgame.keyboard.fired = false;\n\t\t}\n\t}\n\tif(DEBUG) this.parent.update.call(this);\n}\n//fire a Laser\nSpaceship.prototype.fireLaser = function() {\n\tvar laser = new Laser();\n\tlaser.x = this.x;\n\tlaser.y = this.y - Math.floor(this.height/2);\n\tgame.lasers.push(laser);\n}\n\n//define a laser\nfunction Laser(){\n\tthis.width = 10;\n\tthis.height = 30;\n\tthis.state = 'clear';\n}\nLaser.inheritsFrom(PhysicalEntity);\n//draw a Laser\nLaser.prototype.draw = function(context){\n\tcontext.fillStyle = 'white';\n\tcontext.fillRect(0, 0, this.width, this.height);\n}\n//update a laser\nLaser.prototype.update = function(){\n\tthis.y -= 2;\n\tfor(var i = 0; i < game.invaders.length; i++){\n\t\tif(this.hits(game.invaders[i])){\n\t\t\tthis.state = 'hit';\n\t\t\tgame.invaders[i].state = 'hit';\n\t\t\tgame.invaders[i].counter = 0;\n\t\t}\n\t}\n}\n\n//define a missile\nfunction Missile(){\n\tthis.width = 10;\n\tthis.height = 33;\n\tthis.state = 'clear';\n}\nMissile.inheritsFrom(Laser);\n//override update\nMissile.prototype.update = function() {\n\tthis.y += 2;\n\tif(this.hits(game.spaceship)){\n\t\tthis.state = 'hit';\n\t\tgame.spaceship.state = 'hit';\n\t}\n}\n//override draw\nMissile.prototype.draw = function(context){\n\tcontext.fillStyle = 'yellow';\n\tcontext.fillRect(0,0,this.width,this.height);\n}\n\n//define a space invader\nfunction Invader(){\n\tthis.width = 40;\n\tthis.height = 40;\n\tthis.phase = Math.floor(Math.random() * 50);\n\tthis.counter = 0;\n\tthis.state = 'alive';\n}\nInvader.inheritsFrom(PhysicalEntity);\n//draw an invader\nInvader.prototype.draw = function(context){\n\tcontext.fillStyle = this.state == 'hit'? 'purple' : 'red';\n\tcontext.fillRect(0,0,this.width,this.height);\n}\n//update an invader\nInvader.prototype.update = function(){\n\tif(this.state == 'alive'){\n\t\tthis.counter++;\n\t}\n\t//swing right and left 3 pixels\n\tthis.x += Math.sin( this.counter * Math.PI * 2 / 100) * 3;\n\tif( (this.counter + this.phase) % 200 == 0){\n\t\tthis.fireMissile();\n\t}\n\tif(this.state == 'hit'){\n\t\tthis.counter++;\n\t\tif(this.counter >= 20){\n\t\t\tthis.state = 'dead';\n\t\t\tthis.counter = 0;\n\t\t}\n\t}\n}\n//fire missiles\nInvader.prototype.fireMissile = function (){\n\tvar missile = new Missile();\n\tmissile.x = this.x;\n\tmissile.y = this.y;\n\tgame.missiles.push(missile);\n}\n\nvar game = {\n\t//keep track of game state\n\tstate: 'start',\n\t//game speed as fps\n\tgameSpeed: 60,\n\t//reference to the canvas html element\n\tcanvas: document.getElementById('game'),\n\t//reference for html's 2d graphics context\n\tcontext: document.getElementById('game').getContext('2d'),\n\t//keyboard state\n\tkeyboard: {},\n\t//the fired lasers\n\tlasers: [],\n\t//the space invaders\n\tinvaders: [],\n\t//the invader's missiles\n\tmissiles: [],\n\t//the game's spaceship\n\tspaceship: new Spaceship(),\n\t//execute update and drawing operations\n\tgameLoop: function(){\n\t\t//update the spaceship\n\t\tviewport.updateSpaceship();\n\t\t//update fired lasers\n\t\tviewport.updateShots();\n\t\t//update invaders\n\t\tviewport.updateInvaders();\n\t\t//clear the background before drawing game state on screen\n\t\tviewport.clearBackground();\n\t\t//draw the spaceship\n\t\tviewport.paintSpaceship();\n\t\t//draw the lasers\n\t\tviewport.paintShots();\n\t\t//draw the invaders\n\t\tviewport.paintInvaders();\n\t},\n\t//a handle to stop game execution\n\tgameLoopHandle: null,\n};\n\nvar viewport = {\n\t//fills the background with black\n\tclearBackground: function(){\n\t\tgame.context.fillStyle = '#000000';\n\t\tgame.context.fillRect(0,0,game.canvas.width,game.canvas.height);\n\t},\n\t//paints a spaceship\n\tpaintSpaceship: function() {\n\t\tgame.spaceship.paint(game.context);\n\t},\n\t//updates the spaceship\n\tupdateSpaceship: function(){\n\t\tgame.spaceship.update();\n\t},\n\tpaintShots: function(){\n\t\tfor(var i = 0; i < game.lasers.length; i++){\n\t\t\tgame.lasers[i].paint(game.context);\n\t\t}\n\t\tfor(var i = 0; i < game.missiles.length; i++){\n\t\t\tgame.missiles[i].paint(game.context);\n\t\t}\n\t},\n\t//updates the lasers\n\tupdateShots: function(){\n\t\tfor(var i = 0; i < game.lasers.length; i++){\n\t\t\tgame.lasers[i].update();\n\t\t}\n\t\tfor(var i = 0; i < game.missiles.length; i++){\n\t\t\tgame.missiles[i].update();\n\t\t}\n\t\t//remove lasers that are out of the viewport\n\t\tgame.lasers = game.lasers.filter(function(laser){\n\t\t\treturn laser.y > 0 && laser.y < game.canvas.height;\n\t\t});\n\t\t//remove missiles no longer within the viewport\n\t\tgame.missiles = game.missiles.filter(function(missile){\n\t\t\treturn missile.y > 0 && missile.y < game.canvas.height;\n\t\t});\n\t},\n\t//paint invaders\n\tpaintInvaders: function(){\n\t\tfor(var i =0; i < game.invaders.length; i++){\n\t\t\tgame.invaders[i].paint(game.context);\n\t\t}\n\t},\n\t//update invaders\n\tupdateInvaders: function(){\n\t\tfor(var i =0; i < game.invaders.length; i++){\n\t\t\tgame.invaders[i].update();\n\t\t}\n\t\tgame.invaders = game.invaders.filter(function(invader){ return invader.state != 'dead'; });\n\t},\n\t//initializes game content\n\tstartGame: function(){\n\t\t\n\t},\n\t//create a line of invaders\n\tpopulateInvaderRow: function(rowNumber){\n\t\tif(!rowNumber || rowNumber == null){\n\t\t\trowNumber = 0;\n\t\t}\n\t\tfor(var i = 0; i < 10; i++){\n\t\t\tvar invader = new Invader();\n\t\t\tinvader.x = (rowNumber % 2 == 0 ? 30 : 40) + ( i * 50);\n\t\t\tinvader.y = 30 + (rowNumber * 50);\n\t\t\tinvader.counter = rowNumber % 2 == 0 ? 0 : 90;\n\t\t\tgame.invaders.push(invader);\n\t\t}\n\t},\n\t//registers keyboard events\n\taddKeyboardEvents: function() {\n\t\taddEvent(document, 'keydown', function(e){\n\t\t\tgame.keyboard[e.keyCode] = true;\n\t\t}, true);\n\t\taddEvent(document, 'keyup', function(e){\n\t\t\tgame.keyboard[e.keyCode] = false;\n\t\t}, true);\n\t},\n};\n\n//setup game controls\nviewport.addKeyboardEvents();\n//initialize game content\nviewport.startGame();\nviewport.populateInvaderRow(0);\nviewport.populateInvaderRow(1);\n//make sure game loop gets run at a 60pfs rate\ngame.gameLoopHandle = setInterval(game.gameLoop, 1000/game.gameSpeed);\n"]],"start1":0,"start2":0,"length1":0,"length2":8591}]],"length":8591}
{"contributors":[],"silentsave":false,"ts":1352218256922,"patch":[[{"diffs":[[0,"tion(){\n"],[-1,"\t\t"],[1,"        //clear remaining invaders\n\t\tgame.invaders = [];\n        //reset game state\n        game.state = 'started';\n        //reset spaceship state\n        game.spaeceship.state = 'alive';"],[0,"\n\t},\n\t//"]],"start1":7657,"start2":7657,"length1":18,"length2":204}]],"length":8777,"saved":false}
{"ts":1352218598842,"patch":[[{"diffs":[[0,"false;\n\n"],[1,"function randomNumber(max){\n\treturn Math.floor(Math.random() * max + 1);\n}\n\n"],[0,"//setup "]],"start1":12,"start2":12,"length1":16,"length2":92},{"diffs":[[0,"= this.x"],[1," + (randomNumber(2) == 2 ? Math.floor(this.width/2) : -Math.floor(this.width/2) )"],[0,";\n\tmissi"]],"start1":5123,"start2":5123,"length1":16,"length2":97}]],"length":8934,"saved":false}
{"ts":1352218689704,"patch":[[{"diffs":[[0,"er = 0;\n"],[1,"    this.state = 'alive';\n"],[0,"}\nSpaces"]],"start1":2124,"start2":2124,"length1":16,"length2":42}]],"length":8960,"saved":false}
{"ts":1352218726185,"patch":[[{"diffs":[[0,"game.spa"],[-1,"e"],[0,"ceship.s"]],"start1":8004,"start2":8004,"length1":17,"length2":16}]],"length":8959,"saved":false}
{"ts":1352219013070,"patch":[[{"diffs":[[0,"= this.x"],[1,";\n\tmissile.y = this.y;\n    missile.x +="],[0," + (rand"]],"start1":5149,"start2":5149,"length1":16,"length2":55},{"diffs":[[0,"h/2) );\n"],[-1,"\tmissile.y = this.y;\n"],[0,"\tgame.mi"]],"start1":5271,"start2":5271,"length1":37,"length2":16}]],"length":8977,"saved":false}
{"ts":1352219177000,"patch":[[{"diffs":[[0,"e = "],[-1,"'#FFFFFF'"],[1,"(this.state == 'alive' ? 'white' : 'purple')"],[0,";\n\tc"]],"start1":2284,"start2":2284,"length1":17,"length2":52}]],"length":9012,"saved":false}
{"ts":1352219283830,"patch":[[{"diffs":[[0,"Style = "],[-1,"'white'"],[1,"(this.state == 'clear' ? 'white' : 'blue')"],[0,";\n\tconte"]],"start1":3550,"start2":3550,"length1":23,"length2":58},{"diffs":[[0,"e = "],[-1,"'yellow'"],[1,"(this.state == 'clear' ? 'yellow' : 'orange')"],[0,";\n\tc"]],"start1":4276,"start2":4276,"length1":16,"length2":53}]],"length":9084,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352219884241,"patch":[[{"diffs":[[0,"p.update();\n"],[1,"        if(game.spaceship.state == 'hit'){\n            game.state = 'ended';\n        }\n"],[0,"\t},\n\tpaintSh"]],"start1":6774,"start2":6774,"length1":24,"length2":111},{"diffs":[[0,"= true;\n"],[1,"            if(game.state != 'started'){\n               viewport.startGame();\n               viewport.populateInvaderRow(0);\n               viewport.populateInvaderRow(1);\n            }\n"],[0,"\t\t}, tru"]],"start1":8769,"start2":8769,"length1":16,"length2":202}]],"length":9357,"saved":false}
{"ts":1352219995306,"patch":[[{"diffs":[[0,"function(e){\n\t\t\t"],[1,"if(if(game.state == 'started'){\n                "],[0,"game.keyboard[e."]],"start1":8728,"start2":8728,"length1":32,"length2":80},{"diffs":[[0,"ue;\n"],[-1,"            if(game.state != 'started'){"],[1,"\t\t\t} else if (e.keyCode == 32) { //spacebar pressed"],[0,"\n   "]],"start1":8821,"start2":8821,"length1":48,"length2":59}]],"length":9416,"saved":false}
{"ts":1352220029510,"patch":[[{"diffs":[[0,"(e){\n\t\t\t"],[-1,"if("],[0,"if(game."]],"start1":8736,"start2":8736,"length1":19,"length2":16}]],"length":9413,"saved":false}
{"ts":1352220286975,"patch":[[{"diffs":[[0,"\t},\n"],[-1,"\t//registers keyboard events\n\taddKeyboardEvents: function() {\n\t\taddEvent(document, 'k"],[1,"    //handle keydown events\n    onK"],[0,"eydown"],[-1,"',"],[1,":"],[0," fun"]],"start1":8630,"start2":8630,"length1":101,"length2":50},{"diffs":[[0,"ion(e){\n"],[-1,"\t\t\t"],[1,"        "],[0,"if(game."]],"start1":8682,"start2":8682,"length1":19,"length2":24},{"diffs":[[0,"'started'){\n"],[-1,"    "],[0,"            "]],"start1":8715,"start2":8715,"length1":28,"length2":24},{"diffs":[[0,"= true;\n"],[-1,"\t"],[0,"\t\t} else"]],"start1":8764,"start2":8764,"length1":17,"length2":16},{"diffs":[[0,"ssed\n           "],[-1,"    "],[0,"viewport.startGa"]],"start1":8818,"start2":8818,"length1":36,"length2":32},{"diffs":[[0,"tartGame();\n"],[-1,"    "],[0,"           v"]],"start1":8844,"start2":8844,"length1":28,"length2":24},{"diffs":[[0,"\n           "],[-1,"   "],[-1," "],[0,"viewport.pop"]],"start1":8898,"start2":8898,"length1":28,"length2":24},{"diffs":[[0,"        "],[1,"}\n"],[0,"    }"],[1,",\n    //handle keyup events\n    onKeyup: function(e) {\n        game.keyboard[e.keyCode] = false;\n    },\n\t//registers keyboard events\n\taddKeyboardEvents: function() {\n\t\taddEvent(document, 'keydown', function(e){\n\t\t\tviewport.onKeyDown(e);"],[0,"\n\t\t}, tr"]],"start1":8942,"start2":8942,"length1":21,"length2":259},{"diffs":[[0,"\n\t\t\t"],[-1,"game.keyboard[e.keyCode] = false"],[1,"viewport.onKeyup(e)"],[0,";\n\t\t"]],"start1":9248,"start2":9248,"length1":40,"length2":27}]],"length":9575,"saved":false}
{"ts":1352220385214,"patch":[[{"diffs":[[0,"   onKey"],[-1,"d"],[1,"D"],[0,"own: fun"]],"start1":8663,"start2":8663,"length1":17,"length2":17}]],"length":9575,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352222812419,"patch":[[{"diffs":[[0,"le);\n}\n\n"],[1,"function OnscreenMessage(){\n    this.x = 0;\n    this.y = 0;\n    this.counter = -1;\n    this.title = '';\n    this.body = '';\n    this.alpha = 50.0;\n    this.titleFont = 'Bold 40pt Helvetica, Arial';\n    this.bodyFont = '14pt Helvetica, Arial';\n    this.titleFillStyle = 'white';\n    this.bodyFillStyle = 'white';\n}\n\n"],[0,"var game"]],"start1":5411,"start2":5411,"length1":16,"length2":331},{"diffs":[[0,"e);\n\t},\n"],[1,"    //draw messages on the screen\n    drawMessages: function(){\n        \n    },\n"],[0,"};\n\n//se"]],"start1":9596,"start2":9596,"length1":16,"length2":96}]],"length":9970,"saved":false}
{"ts":1352229157540,"patch":[[{"diffs":[[0,"a = "],[-1,"5"],[0,"0."],[-1,"0"],[1,"5"],[0,";\n  "]],"start1":5556,"start2":5556,"length1":12,"length2":11},{"diffs":[[0,"white';\n"],[-1,""],[0,"    this"]],"start1":5688,"start2":5688,"length1":16,"length2":16},{"diffs":[[0,"hite';\n}"],[1,"\n//draw message on screen\nOnScreenMessage.prototype.paint = function(context){\n    this.alpha = this.counter/50.0;\n    this.counter++;\n    if(this.alpha > 1){\n        this.alpha = 1;    \n    }    \n}"],[0,"\n\nvar ga"]],"start1":5723,"start2":5723,"length1":16,"length2":214}]],"length":10167,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352239628013,"patch":[[{"diffs":[[0,"ction On"],[-1,"s"],[1,"S"],[0,"creenMes"]],"start1":5422,"start2":5422,"length1":17,"length2":17}]],"length":10167,"saved":false}
{"ts":1352241342180,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"function OnScreenMessage(){"],[1,"//defines a message that is displayed on screen\nfunction OnScreenMessage(titleFontSize, bodyFontSize){\n    if(!titleFontSize) titleFontSize = 40;\n    if(!bodyFontSize) bodyFontSize = 14;"],[0,"\n   "]],"start1":5415,"start2":5415,"length1":35,"length2":194},{"diffs":[[0,"Font"],[-1," = 'Bold 40pt"],[1,"SizePx = titleFontSize;\n    this.bodyFontSizePx = bodyFontSize;\n    this.titleFont = 'Bold ' + titleFontSize + 'px"],[0," Hel"]],"start1":5738,"start2":5738,"length1":21,"length2":122},{"diffs":[[0,"t = "],[-1,"'14pt"],[1,"bodyFontSize +'px"],[0," Hel"]],"start1":5892,"start2":5892,"length1":13,"length2":25},{"diffs":[[0,"    "],[-1,"this.alpha = this.counter/50.0;\n    this.counter++;\n    if(this.alpha > 1){\n        this.alpha = 1;    \n    }    "],[1,"context.save();\n    context.fillStyle = this.titleFillStyle;\n    context.font = this.titleFont;\n    context.fillText(this.title, (game.canvas.width - context.measureText(this.title))/2, 10 + this.titleFontSizePx);\n    context.font = this.bodyFont;\n    context.fillStyle = this.bodyFillStyle;\n    context.fillText(this.body, (game.canvas.width - context.measureText(this.body))/2, 20 + this.bodyFontSizePx);\n    context.restore();"],[0,"\n}\n\n"]],"start1":6082,"start2":6082,"length1":121,"length2":437}]],"length":10755,"saved":false}
{"ts":1352241553618,"patch":[[{"diffs":[[0,"illText("],[-1,"this."],[1,"'"],[0,"title"],[1,"'"],[0,", (game."]],"start1":6195,"start2":6195,"length1":26,"length2":23},{"diffs":[[0,"illText("],[-1,"this."],[1,"'"],[0,"body"],[1,"'"],[0,", (game."]],"start1":6388,"start2":6388,"length1":25,"length2":22}]],"length":10749,"saved":false}
{"ts":1352242015380,"patch":[[{"diffs":[[0,"e', "],[-1,"(game.canvas.width - context.measureText(this.title))/2"],[1,"10"],[0,", 10"]],"start1":6208,"start2":6208,"length1":63,"length2":10},{"diffs":[[0,"y', "],[-1,"(game.canvas.width - context.measureText(this.body))/2"],[1,"10"],[0,", 20"]],"start1":6347,"start2":6347,"length1":62,"length2":10}]],"length":10644,"saved":false}
{"ts":1352242084775,"patch":[[{"diffs":[[0,"is.title = '"],[1,"title"],[0,"';\n    this."]],"start1":5667,"start2":5667,"length1":24,"length2":29},{"diffs":[[0,"body = '"],[1,"body"],[0,"';\n    t"]],"start1":5696,"start2":5696,"length1":16,"length2":20},{"diffs":[[0,"illText("],[-1,"'"],[1,"this."],[0,"title"],[-1,"'"],[0,", 10, 10"]],"start1":6204,"start2":6204,"length1":23,"length2":26},{"diffs":[[0,"illText("],[-1,"'"],[1,"this."],[0,"body"],[-1,"'"],[0,", 10, 20"]],"start1":6347,"start2":6347,"length1":22,"length2":25},{"diffs":[[0,", 20 + this."],[-1,"body"],[1,"title"],[0,"FontSizePx);"]],"start1":6368,"start2":6368,"length1":28,"length2":29},{"diffs":[[0,".titleFontSizePx"],[1," + 10"],[0,");\n    context.r"]],"start1":6379,"start2":6379,"length1":32,"length2":37}]],"length":10665,"saved":false}
{"ts":1352242125472,"patch":[[{"diffs":[[0,".title, "],[-1,"10"],[1,"context.measureText(this.title)"],[0,", 10 + t"]],"start1":6216,"start2":6216,"length1":18,"length2":47}]],"length":10694,"saved":false}
{"ts":1352242153292,"patch":[[{"diffs":[[0,"s.title)"],[1,".width"],[0,", 10 + t"]],"start1":6247,"start2":6247,"length1":16,"length2":22}]],"length":10700,"saved":false}
{"ts":1352242184999,"patch":[[{"diffs":[[0,"s.title,"],[1," (game.canvas.width -"],[0," context"]],"start1":6215,"start2":6215,"length1":16,"length2":37},{"diffs":[[0,"e).width"],[1,")/2"],[0,", 10 + t"]],"start1":6274,"start2":6274,"length1":16,"length2":19}]],"length":10724,"saved":false}
{"ts":1352242216933,"patch":[[{"diffs":[[0,"s.body, "],[-1,"10"],[1,"(game.canvas.width - context.measureText(this.title).width)/2"],[0,", 20 + t"]],"start1":6417,"start2":6417,"length1":18,"length2":77}]],"length":10783,"saved":false}
{"ts":1352242767897,"patch":[[{"diffs":[[0,"ite';\n}\n"],[1,"//draw a string on screen using context setup\nOnScreenMessage.prototype.drawText = function(context, text, fontSizePx){\n    var text2Draw = text.split('\\n');\n    var yOffset = 0;\n    for(var i = 0; i < text2Draw.length; i++){\n        context.fillText(text2Draw, (game.canvas.width - context.measureText(text2Draw).width)/2, 0);\n        context.translate(0, fontSizePx);\n    }\n}\n"],[0,"//draw m"]],"start1":6005,"start2":6005,"length1":16,"length2":394},{"diffs":[[0,"ext."],[-1,"fillText(this.title, (game.canvas.width - context.measureText(this.title).width)/2, 10 +"],[1,"translate(0, this.titleFontSizePx);\n    this.drawText(context, 10+this.title,"],[0," thi"]],"start1":6577,"start2":6577,"length1":96,"length2":85},{"diffs":[[0,"ext."],[-1,"fillText(this.body, (game.canvas.width - context.measureText(this.title).width)/2, 20 + this.title"],[1,"translate(0, 10+this.bodyFontSizePx);\n    this.drawText(context, 10+this.body, this.body"],[0,"Font"]],"start1":6768,"start2":6768,"length1":106,"length2":96},{"diffs":[[0,"zePx"],[-1," + 10"],[0,");\n "]],"start1":6866,"start2":6866,"length1":13,"length2":8}]],"length":11135,"saved":false}
{"ts":1352242828545,"patch":[[{"diffs":[[0,", fontSizePx"],[1," * i"],[0,");\n    }\n}\n/"]],"start1":6368,"start2":6368,"length1":24,"length2":28}]],"length":11139,"saved":false}
{"ts":1352242866124,"patch":[[{"diffs":[[0,", 10"],[-1,"+this.body, this.bodyFontSizePx"],[0,");\n "]],"start1":6839,"start2":6839,"length1":39,"length2":8}]],"length":11108,"saved":false}
{"ts":1352242884468,"patch":[[{"diffs":[[0,"text, 10"],[1,"+this.body, this.bodyFontSizePx"],[0,");\n    c"]],"start1":6835,"start2":6835,"length1":16,"length2":47}]],"length":11139,"saved":false}
{"ts":1352242912780,"patch":[[{"diffs":[[0,", 10"],[-1,"+this.bodyFontSizePx"],[0,");\n "]],"start1":6787,"start2":6787,"length1":28,"length2":8}]],"length":11119,"saved":false}
{"ts":1352242950035,"patch":[[{"diffs":[[0,"late(0, "],[-1,"10"],[1,"this.bodyFontSizePx"],[0,");\n    t"]],"start1":6781,"start2":6781,"length1":18,"length2":35}]],"length":11136,"saved":false}
{"ts":1352243081428,"patch":[[{"diffs":[[0,"xt(context, "],[-1,"10+"],[0,"this.title, "]],"start1":6636,"start2":6636,"length1":27,"length2":24}]],"length":11133,"saved":false}
